<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3c.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
	">

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/RantzDatasource" />
		<property name="resourceRef" value="true" />
		<property name="cache" value="false" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
		<property name="lookupOnStartup" value="false" />
	</bean>
	<!--
		The jndiName property specifies the name of the object in JNDI. By
		default, the name is used as is to look up the object in JNDI. But if
		the lookup is occurring in a JEE container then a java:comp/env/
		prefix needs to be added. You can manually add the prefix to the value
		specified in jndiName. Or you can set the resourceRef property to true
		to have JndiObjectFactoryBean automatically prepend jndi- Name with
		java:comp/env/:
	-->

	<!--  fallback in case jndi lookup fails -->

	<bean id="devDataSource"
		class="org.springframework.jdbc.datasource.
        âž¥ DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url"
			value="jdbc:hsqldb:hsql://localhost/roadrantz/roadrantz" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/RantzDatasource" />
		<properNewFile.xmlty name="defaultObject" ref="devDataSource" />
	</bean>

	<!-- even simple tags -->
	<jee:jndi-lookup id="dataSource"
    jndi-name="jdbc/RantzDatasource"
    resource-ref="true" />
	
</beans>