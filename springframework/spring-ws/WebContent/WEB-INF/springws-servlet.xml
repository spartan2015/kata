<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
	<!-- 
	 extends a MessageEnpoint abstract class acording to the technology you wish to use:
		DOM, SAX, StAX
		                          
			AbstractDom4jPayloadEndpoint
			AbstractDomPayloadEndpoint
			AbstractJDomPayloadEndpoint
			AbstractMarshallingPayloadEndpoint
			AbstractSaxPayloadEndpoint
			AbstractStaxEventPayloadEndpoint
			AbstractStaxStreamEventPayload
			AbstractSomPayloadEndpoint			                             
 	-->

	<bean id="payloadMapping"
		class="org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping">
		<property name="endpointMap">
			<map>
				<entry key="{http://mseco/poker}EvaluateHandRequest"
					value-ref="evaluateHandEndpoint" />
			</map>
		</property>
	</bean>
 	
<!---->
<!--	<bean id="evaluateHandEndpoint" class="springws.EvaluateHandJDomEndpoint">-->
<!--		<property name="pokerHandEvaluator" ref="pokerHandEvaluator" />-->
<!--	</bean>-->

	<bean id="evaluateHandEndpoint"
		class="springws.EvaluateHandMarshallingEndpoint">						
		<property name="marshaller" ref="marshaller" />
		<property name="unmarshaller" ref="marshaller" />
		<property name="pokerHandEvaluator" ref="pokerHandEvaluator" />
	</bean>
	
	 
	<bean id="pokerHandEvaluator" class="springws.PokerHandEvaluator"/>


	<bean id="marshaller" class="org.springframework.oxm.castor.CastorMarshaller">
		<property name="mappingLocation" value="classpath:mapping.xml" />
	</bean>

	<bean id="endpointExceptionResolver"
		class="org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.oxm.UnmarshallingFailureException">
					SENDER,Invalid message received</prop>
				<prop key="org.springframework.oxm.ValidationFailureException">
					SENDER,Invalid message received</prop>
			</props>
		</property>
		<property name="defaultFault" value="RECEIVER,Server error" />
	</bean>


	<!-- 
	    Pay particular attention to the names I chose for the XML elements that make
up our web service messages: EvaluateHandRequest and EvaluateHandResponse.
These names werenâ€™t chosen arbitrarily. I chose them purposefully to take advan-
tage of a convention-over-configuration feature in Spring-WS that will automati-
cally create WSDL for the poker hand evaluation service.
	
	 -->

	<bean id="poker"
		class="org.springframework.ws.wsdl.wsdl11.DynamicWsdl11Definition">
		<property name="builder">
			<bean
				class="org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder">
				<property name="schema" value="/PokerTypes.xsd" />
				<property name="portTypeName" value="Poker" />
				<property name="locationUri" value="http://localhost:8080/springws/services" />
			</bean>
		</property>
	</bean>
	<!--
		also add a new servlet mappin
		 <servlet-mapping>
			<servlet-name>springws</servlet-name> 
			<url-pattern>*.wsdl</url-pattern>
		</servlet-mapping>
		
		wsdl should be here - spring in action page 406 in pdf
		http://localhost:8080/springws/poker.wsdl
		
	-->
	
	
</beans>